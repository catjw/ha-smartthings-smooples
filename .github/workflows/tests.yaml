name: Unit Tests

on:
  workflow_call:
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.13.2"

jobs:

  tests:
    runs-on: "ubuntu-latest"
    name: Run tests
    strategy:
      matrix:
        python-version: ["3.13.2"]
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4"
      - name: Setup Python
        uses: "actions/setup-python@v4.7.0"
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Pipenv
        uses: actions/cache@v3
        id: cache-pipenv
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install pipenv
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pipenv wheel
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          ls -l
          which python
          pipenv install --deploy --dev
          which python
          pipenv shell
          which python
      # - name: Install requirements
      #   run: |
      #     set -e
      #     python3 -m pip install --upgrade pip
      #     python3 -m pip install -r requirements.txt -r requirements_test.txt
      - name: Run tests
        env:
          PYTEST: true
        run: |
          python3 -m pytest -qq --timeout=30 --durations=10 -n=auto --cov custom_components.smartthings -o console_output_style=count -p no:sugar --asyncio-mode=auto tests
