name: Debugging
on:
  workflow_call:
    inputs:
      type:
        description: The type of target to check against (core, supervisor, plugin, generic)
        required: false
        default: 'generic'
        type: string
      core_version:
        description: The version of Home Assistant core to use
        required: false
        type: string
    # outputs:
    #   version:
    #     description: The version found for the requested type
    #     value: ${{ steps.version.outputs.version }}
    #   stable:
    #     description: Returns "true" if it is a stable build, else "false"
    #     value: ${{ steps.version.outputs.stable }}
    #   channel:
    #     description: Returns suggested channel.
    #     value: ${{ steps.channel.outputs.channel }}
    #   publish:
    #     description: Returns "true" if it should be published, else "false"
    #     value: ${{ steps.publish.outputs.publish }}
  workflow_dispatch:

    
jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4"
      - shell: bash
        env:
          INPUTS_TYPE: ${{ inputs.type }}
        run: |
          if [[ -z "$INPUTS_TYPE" ]];then
            echo "::error::Missing required key 'type' input!"
            exit 1
          fi
      - shell: bash
        id: version
        env:
          GITHUB_EVENT_INPUTS_VERSION: ${{ github.event.inputs.version }}
          GITHUB_EVENT_INPUTS_STABLE: ${{ github.event.inputs.stable }}
          INPUTS_TYPE: ${{ inputs.type }}
          EVENT_NAME: ${{ github.event_name }}
          REF: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref }}
          UV_SYSTEM_PYTHON: "true"
          CORE_VERSION: ${{ inputs.core_version }}
        run: |
          version=$(echo "$REF" | awk -F"/" '{print $NF}' )

          echo "             REF: ${REF}"
          echo "         VERSION: ${version}"
          echo "GH_EVENT_VERSION: ${GITHUB_EVENT_INPUTS_VERSION}"
          echo " GH_EVENT_STABLE: ${GITHUB_EVENT_INPUTS_STABLE}"
          echo "     INPUTS_TYPE: ${INPUTS_TYPE}"
          echo "      EVENT_NAME: ${EVENT_NAME}"
          echo "      GITHUB_SHA: ${{github.sha}}"
          
          core_version=$(grep "homeassistant" requirements.txt | awk -F"==" '{print $2}')
          echo "    CORE_VERSION: ${core_version}"

          if [[ "${CORE_VERSION}" == "" ]]; then
            CORE_VERSION=$(grep "homeassistant" requirements.txt | awk -F"==" '{print $2}')
          fi

          if [[ "${version}" == "master"]]; then
            base_ver=$(echo $CORE_VERSION)
          elif [[ "${version}" == "dev" ]]; then
            today="$(date --utc '+%Y-%m-%d')"
            calver_date="$(date --utc --date=$today '+%Y.%m')"
            if tag=$(git describe --tags --abbrev=0 --match="${calver_date}.*" 2>/dev/null)
            then
            base_ver="$(echo $tag | awk -F. '{printf "%s.%s.%d",$1,$2,$3+1}')"
            else
            base_ver="${calver_date}.0"
            fi
          fi
          commit_count=$(git tag --list "${base_ver}*" | wc -l)
          new_ver=$commit_count + 1

          echo "${base_ver}.${new_ver}"